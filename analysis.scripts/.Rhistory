plot(density(null.dist))
#to make the function smoother, use 50000 instead of 1000, or use abline function
abline(v=39, col="red")
null.dist <= 39
sum(null.dist <= 39)
sum(null.dist <= 39)/length(null.dist)
fish <- matrix(data = c(31, 68, 4, 89),
2,2)
chisq.test(fish)
cdiff <- matrix(data = c(250, 104, 170, 273, 132, 190, 365, 475, 398),
3,3)
chisq.test(cdiff)
View(cdiff)
antelope <- matrix(data=c(199, 175, 53, 61),
2,2)
chisq.test(antelope)
#Butterfly hw
binom.test(87,246,p=.5,alternative="l")
#drosophila question
flies <- matrix(data=154, 165, 110, 148, 170, 120, 115, 195, 101),
(3,3)
#drosophila question
flies <- matrix(data=c(154, 165, 110, 148, 170, 120, 115, 195, 101),
3,3)
View(flies)
chisq.test(flies)
antelope <- matrix(data=c(199, 175, 53, 61),
2,2)
chisq.test(antelope)
fish <- matrix(data = c(31, 68, 4, 89),
2,2)
chisq.test(fish)
flies <- matrix(data=c(154, 165, 110, 148, 170, 120, 115, 195, 101),
3,3)
chisq.test(flies)
sample <- samp(100)
sample <- rexp(100)
mean(20)
mean(sample)
sample <- rexp(100, mean=20, sd=0.5)
x <- c(0:100, 20)
x <- c(0:100, 20)
data(iris)
dni3<- dimnames(iris)
source("~/.active-rstudio-document", echo=TRUE)
dni3<- dimnames(iris)
ii <- data.frame(metric(aperm(iris, c(1,3,2)), ncol=4,
dinames=list(NULL, sub("L.", ".Length",
sub("W.", "Width", dni3[[2]])))),
species = g;(3. 50. labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
data(iris)
dni3<- dimnames(iris)
ii <- data.frame(metric(aperm(iris, c(1,3,2)), ncol=4,
dinames=list(NULL, sub("L.", ".Length",
sub("W.", "Width", dni3[[2]])))),
species = g;(3. 50. labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
ii <- data.frame(metric(aperm(iris, c(1,3,2)), ncol=4,
dinames=list(NULL, sub("L.", ".Length",
sub("W.", "Width", dni3[[2]])))),
species = g;(3. 50. labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
data(iris)
dni3<- dimnames(iris)
ii <- data.frame(metric(aperm(iris, c(1,3,2)), ncol=4,
dinames=list(NULL, sub("L.", ".Length",
sub("W.", "Width", dni3[[2]])))),
species = g;(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
data(iris)
plot(iris)
ndist(samp(100, p=.2))
ndist(samp(100, p=.2))
dist(samp(100, p=.2))
ndist(100, 20)
rdunif(100, b=30, a=10)
samp([10:30], 100)
samp(100)
all.fish <- rexp(100)
all.fish <- rexp([10:30],100)
mean(all.fish)
all.fish<- rexp(50000)
hist(all.fish)
samp <- sample(all.fish, 500)
all.fish<- rexp(50000)
norm(all.fish)
all.fish<- rexp(50000)
hist.default(all.fish)
norm.plot(all.fish)
norm(all.fish)
hist(norm(20))
hist(rnorm(20))
hist(rnorm(20))
hist(rnorm(20))
hist(rnorm(20))
hist(rnorm(20))
hist(rexp(40))
hist(rexp(40))
hist(rexp(40))
hist(rexp(40))
pop1 <- rexp(n=110)
pop2 <- rexp(n=110, rate=.9)
pop1 <- rexp(n=110)
pop2 <- rexp(n=110, rate.6)
plot(density(pop1))
lines(density(pop2))
pop1 <- rexp(n=110)
pop2 <- rexp(n=110, rate=.6)
plot(density(pop1))
lines(density(pop2))
obs.stat <- mean(pop1) - mean(pop2)
obs.stat <- round(mean(pop1) - mean(pop2), digits=4)
c(pop1, pop2)
new.dat <- sample(c(pop1, pop2))
mean(new.dat[1:110) - mean(new.dat[111:220])
sim.stat <- mean(new.dat[1:110]) - mean(new.dat[111:220])
sim.stat <- c()
for(i in 1:1000){
new.dat <- sample(c(pop1, pop2))
sim.stat[i] <- mean(new.dat[1:110]) - mean(new.dat[111:220])
}
plot(density(sim.stat))
abline(v=obs.stat, col="red")
obs.stat<sim.stat
obs.stat>sim.stat
sim.stat<obs.stat
sum(sim.stat<obs.stat)
sum(sim.stat<obs.stat)/length(sim.stat)
for(i in 1:10000){
new.dat <- sample(c(pop1, pop2))
sim.stat[i] <- mean(new.dat[1:110]) - mean(new.dat[111:220])
}
plot(density(sim.stat))
abline(v=obs.stat, col="red") #this shows that the observed data is very different than the expected (simulated data)
sum(sim.stat<obs.stat)/length(sim.stat)
sum(sim.stat<obs.stat)
install.packages("car")
#t.test
data("iris")
#permutations
view(iris)
#permutations
View(iris)
hist(iris$Sepal.Width)
boxplot(iris$Sepal.Width~iris$Species)
help("t.test")
iris$Species == "versicolor"
t.test(x=iris$Sepal.Width[iris$Species == "versicolor"],
y=iris$Sepal.Width[iris$Species == "virginica"])
#paired t.test
init.bp <- sample(rnorm(n=100, mean=180, sd=10))
hist(init.bp)
help(rnorm)
#now we are treating these patients with bp meds
post.bp <- sample(rnorm(n=100, mean=(init.bp-20) ,
sd=10))
plot(post.bp~init.bp)
t.test(x=init.bp, y=post.bp, paired=T, alternative="l")
t.test(y=init.bp, x=post.bp, paired=T, alternative="l")
hist(init.bp-post.bp)
#one sample t.test
#difference between what we expect and what we observe. Is there a change? Yes or not
spawners <- rpois(10, 450)
t.test(spawners, mu=450)
samp1 <- rexp(n=500, rate=1)
samp2 <- rexp(500, rate=1.5)
print(i)
for(i in 1:1000)
print(i)
samp1 <- rexp(n=500, rate=1)
samp2 <- rexp(500, rate=1.5)
for(i in 1:1000)
print(i)
for(i in 1:1000){
print(i)
}
s1 <- rexp(n=350, rate=1)
s2 <- rexp(350, rate=1.5)
for(i in 1:1000){
new.pop<- sample(c(s1, s2))
}
rm(samp1)
rm(samp2)
s1 <- rexp(n=350, rate=1)
s2 <- rexp(350, rate=1.5)
diff <- c()
#repeat this 1000 times
for(i in 1:1000){ #next line is making a new population
new.pop<- sample(c(s1, s2))
diff <- mean(new.pop[1:350]) -
mean(new.pop[351:700]) #this is when you add line 43 as diff as an empty vector
}
s1 <- rexp(n=350, rate=1)
s2 <- rexp(350, rate=1.5)
diff <- c()
#repeat this 1000 times
for(i in 1:1000){ #next line is making a new population
new.pop<- sample(c(s1, s2))
diff[i]<- mean(new.pop[1:350]) -
mean(new.pop[351:700]) #this is when you add line 43 as diff as an empty vector
}
plot(density(diff))
plot(density(diff))
obs.stat <- mean(s1)-mean(s2)
abline(v=obs.stat)
emp.pval <- sum(diff > obs.stat)/length(diff)
plot(density(diff))
s1 <- rexp(n=350, rate=1)
s2 <- rexp(350, rate=1.1)
diff <- c()
#repeat this 1000 times
for(i in 1:1000){ #next line is making a new population
new.pop<- sample(c(s1, s2))
diff[i]<- mean(new.pop[1:350]) -
mean(new.pop[351:700]) #this is when you add line 43 as diff as an empty vector
}
plot(density(diff))
obs.stat <- mean(s1)-mean(s2)
abline(v=obs.stat)
emp.pval <- sum(diff > obs.stat)/length(diff)
power.t.test(, delta=25, sd=50, sig.level = .01, power=.8)
install.packages("ggplot2")
install.packages("ggraptR")
install.packages("viridis")
sample(1:20)
sample(1:20. 3)
sample(1:20, 3)
sample(1:20, 45)
sample(1:20, 45, replace=TRUE)
sample(1:20, 100, replace=TRUE)
sample(1:7, 100, replace=T)
sample (1:2, 50, replace=T)
setwd("~/Desktop")
setwd("~/Desktop/unfinished new data/done done/baghat-1984")
library(SAGA2)
d1 <- read.csv("internode.num1.csv")) # establish the basic data frame
library(SAGA2)
d1 <- read.csv("internode.num1.csv")
View(d1)
setwd("~/Desktop/unfinished new data/done done/starmer-1998/starmer csvs")
library(SAGA2)
d1 <- read.csv("ova18.csv")
res <- LCA(data=d1,
SCS="NSC", parental="calc", env=FALSE,
max.pars=7, ret.all=F)
View(d1)
setwd("~/Desktop/Repositories/LCAdata/unfin")
list.files()
list.files()
load("~/Desktop/Repositories/LCAdata/results/reduced.model.run.RData")
View(res)
shiny::runApp('Desktop/Repositories/LCAdata/shinyapp')
runApp('Desktop/Repositories/LCAdata/shinyapp')
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
install.packages(c("askpass", "backports", "bit", "boot", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "cluster", "codetools", "colorspace", "colourpicker", "commonmark", "conquer", "covr", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "DBI", "deldir", "diffobj", "digest", "downlit", "dplyr", "DT", "e1071", "fansi", "farver", "fastmap", "forcats", "foreign", "formatR", "Formula", "fs", "generics", "gert", "ggplot2", "gh", "gitcreds", "gtable", "gtools", "haven", "hexbin", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "isoband", "jpeg", "jsonlite", "KernSmooth", "labeling", "later", "lattice", "latticeExtra", "lme4", "magrittr", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "packrat", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plyr", "png", "processx", "profvis", "promises", "proxy", "ps", "purrr", "quantreg", "ragg", "RColorBrewer", "Rcpp", "RcppEigen", "RCurl", "readr", "readxl", "rematch", "remotes", "reshape", "reticulate", "rex", "rgeos", "rio", "rlang", "rmarkdown", "rpart", "rprojroot", "rsconnect", "rstudioapi", "rversions", "s2", "sandwich", "sass", "scales", "sf", "shiny", "shinyBS", "shinyjs", "sourcetools", "sp", "spatial", "stringi", "survival", "svglite", "sys", "systemfonts", "Ternary", "testthat", "textshaping", "TH.data", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "units", "usethis", "utf8", "V8", "vctrs", "vdiffr", "viridis", "viridisLite", "vroom", "waldo", "whisker", "wk", "xml2", "yaml", "zip", "zoo"))
setwd("~/Desktop/Repositories/plantmorph")
setwd("~/Desktop/Repositories/plantmorph/analysis.scripts")
setwd("~/Desktop/Repositories/plantmorph/analysis.scripts")
library(SAGA2)
library(viridis)
# leaf area
dat <- read.csv("../data/datasets/area.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# ratio of leaf perimeter to leaf area
dat <- read.csv("../data/datasets/RPA.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# ratio of leaf perimeter to leaf area
dat <- read.csv("../data/datasets/RPA.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# areal ratio
dat <- read.csv("../data/datasets/arealratio.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# leaf length
dat <- read.csv("../data/datasets/length.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# leaf width
dat <- read.csv("../data/datasets/width.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# leaf roundness
dat <- read.csv("../data/datasets/RWL.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# leaf roundness
dat <- read.csv("../data/datasets/RWL.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# seed weight
dat <- read.csv("../data/datasets/seedmass.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# ratio of leaf perimeter to leaf area
dat <- read.csv("../data/datasets/RPA.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
# leaf width
dat <- read.csv("../data/datasets/width.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
rbinom(1000, 10, 0.5)
results <- c()
# Perform simulations
for (i in 1:num_simulations) {
# Simulate the number of males in the sample using binomial distribution
num_males <- rbinom(1, num_individuals, prob_male)
# Calculate the number of females in the sample
num_females <- num_individuals - num_males
# Check if there are at least three males and three females
if (num_males >= 3 && num_females >= 3) {
results[i] <- 1  # Success
} else {
results[i] <- 0  # Failure
}
}
results <- c()
# Perform simulations
for (i in 1:100) {
# Simulate the number of males in the sample using binomial distribution
num_males <- rbinom(1, 10, 0.5)
# Calculate the number of females in the sample
num_females <- 10 - num_males
# Check if there are at least three males and three females
if (num_males >= 3 && num_females >= 3) {
results[i] <- 1  # Success
} else {
results[i] <- 0  # Failure
}
}
results <- c()
# Perform simulations
for (i in 1:100) {
# Simulate the number of males in the sample using binomial distribution
num_males <- rbinom(1, 10, 0.5)
# Calculate the number of females in the sample
num_females <- 10 - num_males
# Check if there are at least three males and three females
if (num_males >= 3 && num_females >= 3) {
results[i] <- 1  # Success
} else {
results[i] <- 0  # Failure
}
}
results <- c()
# Perform simulations
for (i in 1:1000) {
# Simulate the number of males in the sample using binomial distribution
num_males <- rbinom(1, 10, 0.5)
# Calculate the number of females in the sample
num_females <- 10 - num_males
# Check if there are at least three males and three females
if (num_males >= 3 && num_females >= 3) {
results[i] <- 1  # Success
} else {
results[i] <- 0  # Failure
}
}
results
results/1000
sum(results)/1000
results
sum(results)/1000
# ratio of leaf perimeter to leaf area
dat <- read.csv("../data/datasets/RPA.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
plot(res, col.ramp = viridis(100), min.vi = 0.35, main = "Ratio of Perimeter to Area")
res$best.models
# areal ratio
dat <- read.csv("../data/datasets/arealratio.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
res$best.models
res$best.models$`7`$aic
i <-1
print(res$best.models[[i]]$aic)
for(i in 1:length(res)){
print(res$best.models[[i]]$aic)
}
for(i in 1:length(res$best.models)){
print(res$best.models[[i]]$aic)
}
for(i in 1:length(res$best.models)){
print(paste(i, ":", res$best.models[[i]]$aic))
}
res$best.models[[6]]
res$best.models[[12]]
res$best.models[[13]]
for(i in 1:length(res$best.models)){
print(paste(i, ":", res$best.models[[i]]$aic))
}
# areal ratio
dat <- read.csv("../data/datasets/arealratio.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
res$best.models
dat <- read.csv("../data/datasets/length.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
dat <- read.csv("../data/datasets/width.csv")
cmat <- as.matrix(read.csv("../data/cmat/cmatNOF1.csv"))
res <- LCA(dat,
SCS="NSC",
parental = "calc",
env=FALSE,
max.pars = 7,
ret.all=F,
Cmatrix = cmat)
plot(res, col.ramp = viridis(100), main = "Width")
